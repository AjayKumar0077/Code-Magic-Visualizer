(()=>{let t=null,e=!1,s="https://cdn.jsdelivr.net/pyodide/v0.24.1/full/",n=null;async function r(){e||("function"!==typeof self.loadPyodide&&importScripts(s+"pyodide.js"),t=await self.loadPyodide({indexURL:s}),e=!0)}self.onmessage=async o=>{const d=o.data||{};try{if("init"===d.type)return"string"===typeof d.indexURL&&d.indexURL&&(s=d.indexURL.endsWith("/")?d.indexURL:d.indexURL+"/"),n=d.token||null,await r(),void self.postMessage({type:"ready",token:n});if("run"===d.type){if(e||await r(),!d.token||d.token!==n)return;const s=d.runId||null,o=(t,e)=>{try{self.postMessage({type:t,token:n,runId:s,text:String(e)})}catch(r){}};t.globals.set("post_std",o),self.postMessage({type:"start",token:n,runId:s}),await t.runPythonAsync("\nimport sys\nfrom js import post_std\nclass StdoutCatcher:\n    def write(self, s):\n        if s:\n            post_std('stdout', s)\nclass StderrCatcher:\n    def write(self, s):\n        if s:\n            post_std('stderr', s)\nsys.stdout = StdoutCatcher()\nsys.stderr = StderrCatcher()\n");try{const e=await t.runPythonAsync(String(d.code||""));self.postMessage({type:"result",token:n,runId:s,value:null==e?"":String(e)})}catch(a){self.postMessage({type:"error",token:n,runId:s,message:String(a&&a.message||a)})}return}}catch(a){self.postMessage({type:"error",token:n,runId:null,message:String(a&&a.message||a)})}}})();
//# sourceMappingURL=286.ed0d9f75.chunk.js.map